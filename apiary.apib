FORMAT: 1A
HOST: https://shoppinglist-restful-api.herokuapp.com/

# Shoppinglist-api

An application helps you record all items you wish to buy. It allows you to record and share things you want to spend money on, 
meeting your needs and keeping track of your shopping lists.

## Register [/auth/register/]
### Welcome new user [GET]
+ Response 200 (application/json)

        {
            "message": "To register,"
                       "send a POST request with email and password"
                       " to /auth/register/"
        }
### Register user [POST]

Registers new user by getting the email and password.

+ Request (application/json)

        {
           "email": "chris@gmail.com",
           "password": "pass123"
        }

+ Response 201 (application/json)

        {
            "message": "You have been registered successfully. Please login"
        }
        
## Login [/auth/login/]

### Welcome logged in user [GET]
+ Response 200 (application/json)

        {
            "message": "To login,"
                        "send a POST request to /auth/login/"
        }
### Login a user [POST]
Login an already registered user using his/her email and password.

+ Request (application/json)

        {
            "email": "chris@gmail.com",
            "password": "pass123"
        }
        
+ Response 200 (application/json)

        {
            'message': "You are logged in successfully",
            'access_token': "token"
        }

## Reset Token [/user/reset]
### Get Reset Access Token [POST]
Provides a request access token for a registered user to allow him/her to reset password.

+ Request (application/json)

        {
            "email": "chris@gmail.com"
        }

+ Response 200 (application/json)

        {
            "reset_token": "token"
        }

## Reset password [/user/reset/password/{email_token}]
### Change password [PUT]
Allows the user to provide new password.
+ Parameters
    + email_token - Reset token
    
+ Request (application/json)
    
        {
            "password": "password1"
        }
        
+ Response 200 (application/json)

        {
            "message": "You have successfully changed your password"
        }


## User Profile [/user]
Load the profile of the logged in user. Update email or password for a logged in user

### Get user profile [GET]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
        
+ Response 200 (application/json)

        {
            "id": 1,
            "email": "chris@gmail.com"
        }
        
### Update user profile [PUT]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
    
    + Body
    
            {
                "email": "chris@yahoo.com"
            }
        
+ Response 200 (application/json)

        {
            "id": 1,
            "email": "chris@yahoo.com",
            "message": "Successfully updated profile"
        }

## Shoppinglist [/shoppinglists/{?q,limit,page}]

### Get all your shopping lists [GET]
Get all your shopping lists. You can specify limit, page and q parameters
+ Parameters
    + limit (optional) - limit of the results, default is 10
    + page (optional) - page to be displayed, default is 1
    + q (optional) - a search term/query passed by user

+ Request

    + Headers
    
            Authorization : Bearer access_token
            

+ Response 200 (application/json)

        {
            "next_page": "None",
            "previous_page": "None",
            "shopping_lists": [
                {
                    "id": 16,
                    "name": "Easter"
                },
                {
                    "id": 18,
                    "name": "Back to school"
                },
                {
                    "id": 17,
                    "name": "Soko in marigiti"
                }
            ]   
        }
### Create a shopping list [POST]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
        
    + Body
    
            {
                "name": "Christmass shopping"
            }
        
+ Response 201 (application/json)

        {
            "created_by": 2,
            "date_created": "Sat, 16 Sep 2017 18:00:27 GMT",
            "date_modified": "Sat, 16 Sep 2017 18:00:27 GMT",
            "id": 19,
            "name": "Christmass shopping"
        }

## Shoppinglist manipulation [/shoppinglists/{shoppinglist_id}]
+ Parameters
    + shoppinglist_id (number) - ID of the shopping list to edit, delete, get

### Edit a shopping list [PUT] 
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
    
    + Body
    
            {
                "name": "Christmass shopping at Uchumi"
            }
        
+ Response 200 (application/json)

        {
            "created_by": 2,
            "date_created": "Sat, 16 Sep 2017 18:00:27 GMT",
            "date_modified": "Sat, 16 Sep 2017 18:45:40 GMT",
            "id": 19,
            "name": "Christmass shopping at Uchumi"
        }

### Get a shopping list [GET]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
        
+ Response 200 (application/json)

        {
            "created_by": 2,
            "date_created": "Sat, 16 Sep 2017 18:00:27 GMT",
            "date_modified": "Sat, 16 Sep 2017 18:45:40 GMT",
            "id": 19,
            "name": "Christmass shopping at Uchumi"
        }

### Delete a shopping list [DELETE]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
    
+ Response 200 (application/json)
    
        {
            "message": "Shopping list deleted successfully"
        }


## Shoppingitems [/shoppinglists/{shoppinglist_id}/items{?q,limit,page}]
Get all your shopping items. You can specify shopping list id,limit, page and q parameters
+ Parameters
    + shoppinglist_id (number) - ID of the shopping list to add or get shopping items
    + limit (optional) - limit of the results, default is 10
    + page (optional) - page to be displayed, default is 1
    + q (optional) - a search term/query passed by user

### Get shopping items in a shoppinglist [GET]
+ Request

    + Headers
    
            Authorization : Bearer access_token
            

+ Response 200 (application/json)

        {
            "next_page": "None",
            "previous_page": "None",
            "shopping_items": [
                {
                    "id": 8,
                    "name": "Pencil",
                    "price": 10,
                    "quantity": 2
                },
                {
                    "id": 9,
                    "name": "Rubber",
                    "price": 10,
                    "quantity": 2
                }
            ]   
        }
### Create a shopping item [POST]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
        
    + Body
    
            {
                "name": "Pencil",
                "price": 10,
                "quantity": 2
            }
        
+ Response 201 (application/json)

        {
            "created_by": 3,
            "date_created": "Sat, 16 Sep 2017 18:00:27 GMT",
            "date_modified": "Sat, 16 Sep 2017 18:00:27 GMT",
            "id": 8,
            "in_shoppinglist": 19,
            "name": "Pencil",
            "price": 10,
            "quantity": 2
        }

## Shoppingitems manipulation [/shoppinglists/{shoppinglist_id}/items/{item_id}]
+ Parameters
    + shoppinglist_id (number) - ID of the shopping list to add or get shopping item
    + item_id (number) - ID of the shopping item to edit, get, delete

### Edit a shopping item [PUT] 
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
    
    + Body
    
            {
                "name": "Pen"
            }
        
+ Response 200 (application/json)

        {
            "created_by": 3,
            "date_created": "Sat, 16 Sep 2017 18:00:27 GMT",
            "date_modified": "Sat, 16 Sep 2017 18:45:40 GMT",
            "id": 8,
            "in_shoppinglist": 19,
            "name": "Pen",
            "price": 10,
            "quantity": 2
        }

### Get a shopping item [GET]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
        
+ Response 200 (application/json)

        {
            "created_by": 3,
            "date_created": "Sat, 16 Sep 2017 18:00:27 GMT",
            "date_modified": "Sat, 16 Sep 2017 18:45:40 GMT",
            "id": 8,
            "in_shoppinglist": 19,
            "name": "Pen",
            "price": 10,
            "quantity": 2
        }

### Delete a shopping item [DELETE]
+ Request (application/json)

    + Headers
    
            Authorization : Bearer access_token
    
+ Response 200 (application/json)
    
        {
            "message": "item Pen deleted"
        }

